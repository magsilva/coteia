<?php
/*
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

Copyright (C) 2006 Marco Aurelio Graciotto Silva <magsilva@gmail.com>
*/

require_once('FileUtil.class.php');

/**
 * CoTeia's configuration file.
 * 
 * This class implements the Singleton pattern.
 */
class Config
{
	/**
	 * Single instance of the class.
	 */
	private static $instance;
	
	/**
	* The current debug level.
	*/
	private $debugLevel;
	
	/**
	 * CoTeia's instance name.
	 */
	public $name = 'Experimental CoTeia';	
	
	/**
	 * Database	 configuration for CoTeia.
	 */
	/**
	* The database driver (one supported by ADOdb). ADOdb supports: MySQL,
	* Oracle, Microsoft SQL Server, Sybase, Sybase SQL Anywhere, Informix,
	* PostgreSQL, FrontBase, SQLite, Interbase (Firebird and Borland
	* variants), Foxpro, Access, ADO, DB2, SAP DB and ODBC. Check the 
	* directory "lib/adodb/drivers" for the driver's name.
	*/
	public $dbdriver = 'mysql'; // mysqlt
	
		/**
	* This usually is the hostname for the database server. Some databases,
	* like SQLite, uses local files, to this may be a filename, so check
	* out the correct value for this parameter.
	*/
	public $dbhost = 'localhost';
	
		/**
	* The database name.
	*/
	public $dbname = 'coteia';
	
	/**
	* The username required to connect in the database server.
	*/
	public $dbuser = "test";
	
	/**
	* The password required to connect in the database server as $dbUsername.
	*/
	public $dbpass = "test";

	/**
	* The directory CoTeia's files were installed to.
	*/
	private $path;

	// http://br.php.net/manual/en/timezones.php
	private $timezone = 'GMT';

	/**
	 * URL used to access CoTeia.
	 */
	public $URL_COWEB = "http://localhost/~magsilva/Tools/CoTeia";
	 
	 /**
	  * Information about CoTeia's admin.
	  */
	public $ADMIN = "Admin";
	public $ADMIN_EMAIL = "admin@somewhere";
	public $ADMIN_PASSWORD = "admin";
	  
	/**
	 * Username that run the CoTeia application (usually the same as the web
	 * server).
	 * If running CoTeia within a common user's account, change the defaults to
	 * "" (blank). Please, use this setting just for testing. CoTeia strives to
	 * be as secure as possible, but setting $DEFAULT_USER and $DEFAULT_GROUP to
	 * something different from "" is needed for proper secure operation.
	 */
	public $DEFAULT_USER = "";
	public $DEFAULT_GROUP = "";


	/**
	* Default files and directory permissions. Default values: 0640 for files,
	* 0750 for directories.
	*/
	public $DEFAULT_FILE_PERMISSION = 0640;
	public $DEFAULT_DIR_PERMISSION = 0750;

	/**
	 * Skin to be used.
	 * Possible values: default, ffclrp
	 * Default value: ffclrp
	 */
	public $theme = 'ffclrp';
	public $SKIN = 'ffclrp';
	
	public $themesPrivatePath;
	public $themesPublicPath;
	
	public $smartyTemplateDir;
	public $smartyCompileDir;
	public $smartyConfigDir;
	public $smartyCacheDir;

	/**
	 * Character encoding.
	 */
	public $encoding = "ISO-8859-1";

	/**
	 * Default locale.
	 */
	public $DEFAULT_LANGUAGE = "en";

	public $locale = 'en';

	/****************************************************************************/
	/* Parameters that usually doesn't require changes                          */
	/****************************************************************************/

	/**
	 * Directory where CoTeia's files are installed.
	 */
	public $PATH_COWEB;

	/**
	 * Directory that holds every file created and managed by CoTeia.
	 * These files are all optional, CoTeia will always run without it (at least
	 * if the "setup.php" script is run before accessing CoTeia.
	 * This must be a relative directory.
	 */
	public $FILES_DIR;

	/**
	 * Directory with the plugins.
	 */
	public $PLUGINS_DIR;

	/**
	 * Directory with the uploaded files.
	 */
	public $UPLOADS_DIR;

	/**
	 * Directory with the files generated by CoTeia.
	 */
	public $OUTPUT_DIR;

	/**
	 * Directory with the generated XML files.
	 */
	public $XML_DIR;

	/**
	 * Directory with the skins.
	 */
	public $SKINS_DIR;


	/**
	 * Image's directory. This is affected by the skin choosen.
	 */
	public $IMAGES_DIR;

	/**
	 * Directory with the XSLT files that may be used by CoTeia.
	 * 
	 * The default XSLT filename always is "default.xsl". The directory this
	 * file is searched for depends upon the skin choosen (for example, with
	 * "default" skin, the filename will be "$XSL_DIR/default/default.xsl".
	 */
	public $XSL_DIR;
	
	/**
	 * Directory with the CSS files that may be used by CoTeia.
	 * 
	 * The default CSS filename always is "default.xsl". The directory this file
	 * is searched for depends upon the skin choosen (for example, with
	 * "default" skin, the filename will be "$CSS_DIR/default/default.css".
	 */
	public $CSS_DIR;

	/**
	 * Directory for log files.
	 */
	public $LOG_DIR;

	public $DEFAULT_OUTPUT_FORMAT = 'html';

	/**
	* CoTeia's version.
	*/
	const VERSION = '2.5';

	/**
	 * CoTeia's license (see COPYING for the full text).
	 */
	const LICENSE = 'GPL';
	
	/**
	 * Constructor (it is private because this class implements the Singleton
	 * pattern.
	 */
	private function __construct()
	{
		$this->disable_php_magic_quotes();
		$this->setup_dirs();
		$this->setup_unix_permissions();
		
		$this->set_locale($this->DEFAULT_LANGUAGE);
		date_default_timezone_set($this->timezone);
		
		$this->themesPrivatePath = dirname(__FILE__) . '/data/themes';
		$this->themesPublicPath = dirname(__FILE__) . '/themes';

		$this->smartyTemplateDir = $this->themesPrivatePath . '/' . $this->theme . '/' . $this->locale;
		$this->smartyCompileDir = $this->smartyTemplateDir . '/obj';
		@FileUtil::recursiveMkdir($this->smartyCompileDir);
		
		$this->smartyConfigDir = $this->themesPrivatePath . '/' . $this->theme;
		$this->smartyCacheDir = $this->smartyTemplateDir . '/cache';
		@FileUtil::recursiveMkdir($this->smartyCacheDir);
	}

	private function sanity_check()
	{
		if (! is_writable($this->smartyCacheDir) || ! is_writable($this->smartyCompileDir)) {
			trigger_error('Smarty could not be automatically set up.', E_USER_ERROR);
		}
	}

	private function setup_dirs()
	{
		$this->PATH_COWEB = dirname( __FILE__ );

		$this->FILES_DIR = $this->PATH_COWEB . '/data';
		$this->PLUGINS_DIR = $this->PATH_COWEB . '/plugins';

		$this->LOG_DIR = $this->FILES_DIR . '/log';
		$this->SKINS_DIR = $this->FILES_DIR . '/themes';
		$this->UPLOADS_DIR = $this->FILES_DIR . '/upload';
		$this->XML_DIR = $this->FILES_DIR . '/xml';

		$this->OUTPUT_DIR = $this->SKINS_DIR . '/' . $this->SKIN . '/output';
		$this->IMAGES_DIR = $this->SKINS_DIR . '/' . $this->SKIN . "/images";
		$this->XSL_DIR = $this->SKINS_DIR . '/' . $this->SKIN . "/xsl";
		$this->CSS_DIR = $this->SKINS_DIR . '/' . $this->SKIN . "/css";
	}

	private function check_dirs()
	{
		is_dir( $this->PATH_COWEB );

		is_dir( $this->FILES_DIR );
		is_dir( $this->PLUGINS_DIR );

		is_dir( $this->LOG_DIR );
		is_dir( $this->SKINS_DIR );
		is_dir( $this->UPLOADS_DIR );
		is_dir( $this->XML_DIR );

		is_dir( $this->OUTPUT_DIR );
		is_dir( $this->IMAGES_DIR );
		is_dir( $this->XSL_DIR );
		is_dir( $this->CSS_DIR );
	} 
	
	private function setup_unix_permissions()
	{
		/**
		 * Hack  for enabling the use of CoTeia within user's area (useful for
		 * testing).
		 */
		 if ( $this->DEFAULT_USER === "" || $this->DEFAULT_GROUP === "" ) {
		 	umask( 0 );
		 	$DEFAULT_FILE_PERMISSION = 0777;
		 	$DEFAULT_DIR_PERMISSION = 0777;
		 }
	}

	private function disable_php_magic_quotes()
	{
		/**
		 * Unset magic_quotes_runtime.
		 */
		set_magic_quotes_runtime( 0 );
		
		// TODO: Check if .htaccess has:
		//
		// php_flag magic_quotes_gpc off
		// php_flag magic_quotes_sybase off
	}

	public function set_locale($language)
	{
		@putenv("LANG=$language"); 
		setlocale(LC_ALL, $language);
		
		// Set the text domain as 'messages'
		// $domain = "coteia";
		// bindtextdomain($domain, "$PATH_COWEB/locale");
		// textdomain($domain);
	}
	
	public function get_stylesheets()
	{
		$stylesheets = array();
		
		foreach ( glob( $this->XSL_DIR . '/"*.xsl') as $xsl) {
			$stylesheets[] = $xsl;
		}
		return $stylesheets;
	}

	/**
	 * The singleton method.
	 */
	public static function instance() 
	{
		if ( ! isset( self::$instance ) ) {
			$c = __CLASS__;
			self::$instance = new $c;
		}
		return self::$instance;
	}
    
	/**
	 * Prevent users to clone the instance.
	 */
	public function __clone()
	{
		trigger_error('Clone is not allowed.', E_USER_ERROR);
	}
	
	/**
	* Change the debug level for CoTeia. This set how verbose CoTeia
	* will be on errors.
	*
	* @param $i [int] Log level. The higher the number, higher the
	* verbosity.
	*/
	private function setDebugLevel($i)
	{
		if ($i < 0) {
			$i = 0;
		}
		$debugLevel = $i;
		if ($debugLevel == 0) {
			error_reporting(E_ALL);
			define('ADODB_ERROR_LOG_TYPE',3);
			ini_set("display_errors", "1");
		}
		if ($debugLevel >= 1) {
			error_reporting(E_ALL);
			define('ADODB_ERROR_LOG_TYPE',3);
			ini_set("display_errors", "0");
		}
		if ($debugLevel >= 2) {
			error_reporting(E_ALL);
			define('ADODB_ERROR_LOG_TYPE',3);
			ini_set("display_errors", "1");
		}
	}
}

?>
